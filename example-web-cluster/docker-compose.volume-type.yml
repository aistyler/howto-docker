version: "3.5"
services:

  webserver:
    build:
      context: ../nginx
      dockerfile: dockerfile.development
    image: webserver:nginx
    ports:
      - "8080:80"
    networks:
      - backend-network
    volumes:
      - type: volume
        source: example_web_cluster_volume
        target: /volume-ro
        read_only: true
      - type: volume
        source: example_web_cluster_volume
        target: /volume-rw
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  webapp:
    build:
      context: ../nodejs/app
      dockerfile: dockerfile.development
    image: webapp:nodejs
    ports:
      - "2337:8080"
    networks:
      - backend-network
    volumes:
      - type: volume
        source: example_web_cluster_volume
        target: /volume-ro
        read_only: true
      - type: volume
        source: example_web_cluster_volume
        target: /volume-rw
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  backend-network:
    external:
      name: backend-network
                
volumes:
  example_web_cluster_volume:
    external:
      name: example_web_cluster_volume
